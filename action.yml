name: "Conda Env Check"
description: "Checks conda env files and pin files for outdated packages"
inputs:
  envs:
    description: "A comma-separated list of directories where environment files are stored"
    required: false
    default: "./"
  conda_version:
    description: "The version of conda to use"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
      - name: setup-conda
        uses: s-weigand/setup-conda@v1.2.1
        with:
          # Additional channels like 'conda-forge' which can be used to install packages
          conda-channels: '' # optional, default is 

      - name: update-conda
        shell: bash
        run: conda --version

      - name: install-deps
        shell: bash
        run: pip install pyyaml bs4
      
      - name: find-envs
        id: find-envs
        shell: bash
        env:
          ENVS: ${{ inputs.envs }}
        run: |
          OUTPUT=$(python "${{ github.action_path }}/scripts/check_envs.py" $ENVS)

          if [[ $OUTPUT == *"FAIL"* ]]; then
            echo "::set-output name=PERC::failing"
            echo "::set-output name=COLOR::ff0000"
          else
            PERC=$(echo "$OUTPUT" | grep -E '^Percentage:' | awk '{print $2}' | tr -d '%')
            echo "::set-output name=perc::$PERC%"

            RED=$(printf "%02x" $((255 - $PERC*255/100)))
            GREEN=$(printf "%02x" $(($PERC*255/100)))
            COLOR=$RED$GREEN"00"
            echo "::set-output name=color::$COLOR"
          fi

          echo "$OUTPUT"
      
      - name: Percentage badge
        uses: RubbaBoy/BYOB@v1.3.0
        with:
          NAME: env_check
          LABEL: 'Conda Env Check'
          STATUS: "${{ steps.find-envs.outputs.perc }}"
          COLOR: ${{ steps.find-envs.outputs.color }}
          GITHUB_TOKEN: ${{ github.token }}

      - name: Exit
        shell: bash
        if: steps.find-envs.outputs.perc == 'failing'
        run: exit 1

branding:
  icon: 'check-square'
  color: 'blue'